#import "multiply.txt"
#import "divide.txt"

#define LIMIT 10
#define C_A 0
#define C_B 1
#define C_C 2
#define C_D 3

section.data

    ; variables are defined here 
    num 5
    counter 0xe
    result null

section.code

    ; code is written here
    lda num
    inc num

    code:
        inc 
        add counter
        jmp code
        sub 0x6b
        lda 0b00000010
    
    ldi 3
    sta m_input1
    ldi 4
    sta m_input2
    call multiply
    outy m_result





; comments
; # is header code
; section means section of memory
; word: is a label 
; lda is a memonic
; lda 50 <- is an operand
; literal -> 10 variable -> num



; testing counting up -> counting down

section.data
    constant 5

section.code
    ldi 0
    outx
    counting_up:
        add constant
        outx
        jn counting_down
        jmp counting_up 
    
    counting_down:
        sub constant
        outx
        jz stop
        jmp counting_down

    stop:
        hlt
